{"name":"Thincloud Authentication","tagline":"A Rails Engine to provide authentication for Thincloud applications.","body":"# Thincloud::Authentication\r\n\r\n[![Build Status](https://secure.travis-ci.org/newleaders/thincloud-authentication.png)](http://travis-ci.org/newleaders/thincloud-authentication) [![Code Climate](https://codeclimate.com/badge.png)](https://codeclimate.com/github/newleaders/thincloud-authentication)\r\n\r\n## Description\r\n\r\nA Rails Engine to provide authentication for Thincloud applications.\r\n\r\n## Requirements\r\n\r\nThis gem requires Rails 3.2+ and has been tested on the following versions:\r\n\r\n* 3.2\r\n\r\nThis gem has been tested against the following Ruby versions:\r\n\r\n* MRI 1.9.2\r\n* MRI 1.9.3\r\n* JRuby 1.6+ (with `JRUBY_OPTS=--1.9`)\r\n* Rubinius 2.0.0dev (with `RBXOPT=-X19`)\r\n\r\nThis gem has been tested against the following database versions:\r\n\r\n* MySQL 5.0, 5.5\r\n* PostgreSQL 9.1, 9.2\r\n* SQLite 3\r\n\r\n\r\n## Installation\r\n\r\nAdd this line to your application's Gemfile:\r\n\r\n``` ruby\r\ngem \"thincloud-authentication\"\r\n```\r\n\r\n* Run `bundle`\r\n* Copy the migrations and prepare your databases:\r\n\r\n```\r\n$ rake thincloud_authentication:install:migrations db:migrate db:test:prepare\r\n```\r\n\r\n* Mount the engine in your `config/routes.rb` file:\r\n\r\n```ruby\r\nmount Thincloud::Authentication::Engine => \"/auth\", as: \"auth_engine\"\r\n```\r\n\r\nUsing the example above, you may now login or signup at [http://lvh.me:3000/auth](http://lvh.me:3000/auth).\r\n\r\n### Prerequisites\r\n\r\nThe following must be true for `thincloud-authentication` to operate properly:\r\n\r\n* A `root_url` must be defined in `config/routes.rb`\r\n* A `User` model must exist\r\n\r\n\r\n## Configuration\r\n\r\nThe `Thincloud::Authentication` module accepts a `configure` block with options to customize the engine behavior.\r\n\r\n\r\n### Layouts\r\n\r\nSet the `layout` option to customize the layout used by all thincloud-authentication views:\r\n\r\n```ruby\r\nThincloud::Authentication.configure do |config|\r\n  config.layout = \"other\"\r\nend\r\n```\r\n\r\n### Mailers\r\n\r\nSet the `mailer_sender` option to customize the \"From\" address of the emails sent from the system:\r\n\r\n```ruby\r\nThincloud::Authentication.configure do |config|\r\n  config.mailer_sender = \"app@example.com\"\r\nend\r\n```\r\n\r\n### Cookies\r\n\r\nSet the `cookie_options` option to customize the options that get passed to the authentication cookies:\r\n\r\n```ruby\r\nThincloud::Authentication.configure do |config|\r\n  config.cookie_options = { secure: true, domain: :all }\r\nend\r\n```\r\n\r\n\r\n### Additional provider strategies\r\n\r\n* Require the `omniauth-#{provider}` gem before the `thincloud-authentication` gem in the `Gemfile`:\r\n\r\n```ruby\r\ngem \"omniauth-linkedin\"\r\ngem \"omniauth-stripe-connect\"\r\ngem \"thincloud-authentication\"\r\n```\r\n\r\n* Add a key to the `providers` hash with the name of the strategy, followed by additional options for `require`, `scopes` and `fields` as needed. Additionally, you will need to provide environment variables (prefixed with the provider name), with the `consumer_key` and `consumer_secret` values from your OAuth provider.\r\n\r\nTo enable the [LinkedIn](https://github.com/skorks/omniauth-linkedin) and [Stripe Connect](https://github.com/isaacsanders/omniauth-stripe-connect) providers:\r\n\r\n* Provide values for following environment variables:\r\n    * `ENV[\"LINKEDIN_CONSUMER_KEY\"]`\r\n    * `ENV[\"LINKEDIN_CONSUMER_SECRET\"]`\r\n    * `ENV[\"STRIPE_CONNECT_CONSUMER_KEY\"]`\r\n    * `ENV[\"STRIPE_CONNECT_CONSUMER_SECRET\"]`\r\n* Add the file `config/initializers/thincloud_authentication.rb` with the following contents:\r\n\r\n```ruby\r\nThincloud::Authentication.configure do |config|\r\n  config.providers = {\r\n    linkedin: {\r\n      scopes: \"r_emailaddress r_basicprofile\",\r\n      fields: [\"id\", \"email-address\", \"first-name\", \"last-name\", \"headline\",\r\n               \"industry\", \"picture-url\", \"location\", \"public-profile-url\"]\r\n    },\r\n    stripe_connect: {\r\n      require: \"omniauth-stripe-connect\",\r\n      scopes: \"read_write\"\r\n    }\r\n  }\r\nend\r\n```\r\n\r\n\r\n### Vanity Routes\r\n\r\nIf you want to customize the routes (remove the `/auth` prefix), you may add the following to your `config/routes.rb` file:\r\n\r\n```ruby\r\nget \"signup\", to: \"thincloud/authentication/registrations#new\", as: \"signup\"\r\nget \"login\", to: \"thincloud/authentication/sessions#new\", as: \"login\"\r\ndelete \"logout\", to: \"thincloud/authentication/sessions#destroy\", as: \"logout\"\r\n```\r\n\r\nUsing the example above, you will have the following routes locally:\r\n\r\n* `signup_url` points to \"/signup\"\r\n* `login_url` points to \"/login\"\r\n* `logout_url` points to \"/logout\" - Make sure to use the `delete` method to logout.\r\n\r\n\r\n### Redirection\r\n\r\nYou can customize the paths used to redirect users after login, logout, registration and email verification by overriding the corresponding methods in your ApplicationController, or specific controllers, as needed.\r\n\r\n* `after_login_path` is used after the user logs in.\r\n* `after_logout_path` is used after the user logs out.\r\n* `after_registration_path` is used after the user registers.\r\n* `after_verification_path` is used after the user verifies their email.\r\n* `after_password_update_path` is used after the user updates their password.\r\n\r\n### Working with Identities\r\n\r\nThincloud Authentication provides a few service objects to assist with creating and updating Identities:\r\n\r\n* `CreateInvitationForUser.call(user, name: \"Test Name\", email: \"test@test.com\")` is used to create a new Identity for a user and send an email with an invitation URL which allows the user to choose a password.\r\n* `UpdateIdentityPassword.call(identity, password: \"s3kr1tz!\", password_confirmation: \"s3kr1tz!\")` is used to update the password for an existing Identity.\r\n\r\nBoth of the methods above will return `true` or `false`.\r\n\r\n\r\n## TODO\r\n\r\n* Add multiple, configurable strategy options\r\n* Add a configuration option to customize the mailers\r\n\r\n\r\n## Contributing\r\n\r\n1. [Fork it](https://github.com/newleaders/thincloud-authentication/fork_select)\r\n2. Create your feature branch (`git checkout -b my-new-feature`)\r\n3. Commit your changes (`git commit -am 'Added some feature'`)\r\n4. Push to the branch (`git push origin my-new-feature`)\r\n5. [Create a Pull Request](https://github.com/newleaders/thincloud-authentication/pull/new)\r\n\r\n\r\n## License\r\n\r\n* Freely distributable and licensed under the [MIT license](http://newleaders.mit-license.org/2012/license.html).\r\n* Copyright (c) 2012 New Leaders ([opensource@newleaders.com](opensource@newleaders.com))\r\n* [https://newleaders.com](https://newleaders.com)\r\n","google":"UA-1755363-18","note":"Don't delete this file! It's used internally to help with page regeneration."}